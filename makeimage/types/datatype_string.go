// Code generated by "stringer -type=DataType"; DO NOT EDIT.

package types

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NO_LABEL-0]
	_ = x[SITE-1]
	_ = x[POINT-2]
	_ = x[LINE-3]
	_ = x[JUNCTION-4]
	_ = x[CARTOGRAPHIC-5]
	_ = x[EDUCATION_SCHOOL-6]
	_ = x[POLICE_STATION-7]
	_ = x[HOSPITAL-8]
	_ = x[LEISURE_CENTRE-9]
	_ = x[AIRPORT-10]
	_ = x[PLACE_OF_WORSHIP-11]
	_ = x[EDUCATION_HIGHER-12]
	_ = x[WATER_TRANSPORT-13]
	_ = x[ROAD_TRANSPORT-14]
	_ = x[ROAD_SERVICES-15]
}

const _DataType_name = "NO_LABELSITEPOINTLINEJUNCTIONCARTOGRAPHICEDUCATION_SCHOOLPOLICE_STATIONHOSPITALLEISURE_CENTREAIRPORTPLACE_OF_WORSHIPEDUCATION_HIGHERWATER_TRANSPORTROAD_TRANSPORTROAD_SERVICES"

var _DataType_index = [...]uint8{0, 8, 12, 17, 21, 29, 41, 57, 71, 79, 93, 100, 116, 132, 147, 161, 174}

func (i DataType) String() string {
	if i < 0 || i >= DataType(len(_DataType_index)-1) {
		return "DataType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DataType_name[_DataType_index[i]:_DataType_index[i+1]]
}
